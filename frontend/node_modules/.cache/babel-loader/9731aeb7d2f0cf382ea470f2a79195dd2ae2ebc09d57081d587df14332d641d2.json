{"ast":null,"code":"// Select the entire auth state\nconst selectAuthState = state => state.auth;\n\n// Select the current user\nexport const selectCurrentUser = state => selectAuthState(state).user;\n\n// Check if user is authenticated\nexport const selectIsAuthenticated = state => selectAuthState(state).isAuthenticated;\n\n// Get authentication loading state\nexport const selectAuthLoading = state => selectAuthState(state).loading;\n\n// Get authentication error\nexport const selectAuthError = state => selectAuthState(state).error;\n\n// Get authentication token\nexport const selectAuthToken = state => selectAuthState(state).token;","map":{"version":3,"names":["selectAuthState","state","auth","selectCurrentUser","user","selectIsAuthenticated","isAuthenticated","selectAuthLoading","loading","selectAuthError","error","selectAuthToken","token"],"sources":["/home/anthony/Escritorio/ticket-system/frontend/src/features/auth/authSelectors.ts"],"sourcesContent":["import { RootState } from '../../app/store';\n\n// Select the entire auth state\nconst selectAuthState = (state: RootState) => state.auth;\n\n// Select the current user\nexport const selectCurrentUser = (state: RootState) => selectAuthState(state).user;\n\n// Check if user is authenticated\nexport const selectIsAuthenticated = (state: RootState) => selectAuthState(state).isAuthenticated;\n\n// Get authentication loading state\nexport const selectAuthLoading = (state: RootState) => selectAuthState(state).loading;\n\n// Get authentication error\nexport const selectAuthError = (state: RootState) => selectAuthState(state).error;\n\n// Get authentication token\nexport const selectAuthToken = (state: RootState) => selectAuthState(state).token;\n"],"mappings":"AAEA;AACA,MAAMA,eAAe,GAAIC,KAAgB,IAAKA,KAAK,CAACC,IAAI;;AAExD;AACA,OAAO,MAAMC,iBAAiB,GAAIF,KAAgB,IAAKD,eAAe,CAACC,KAAK,CAAC,CAACG,IAAI;;AAElF;AACA,OAAO,MAAMC,qBAAqB,GAAIJ,KAAgB,IAAKD,eAAe,CAACC,KAAK,CAAC,CAACK,eAAe;;AAEjG;AACA,OAAO,MAAMC,iBAAiB,GAAIN,KAAgB,IAAKD,eAAe,CAACC,KAAK,CAAC,CAACO,OAAO;;AAErF;AACA,OAAO,MAAMC,eAAe,GAAIR,KAAgB,IAAKD,eAAe,CAACC,KAAK,CAAC,CAACS,KAAK;;AAEjF;AACA,OAAO,MAAMC,eAAe,GAAIV,KAAgB,IAAKD,eAAe,CAACC,KAAK,CAAC,CAACW,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}