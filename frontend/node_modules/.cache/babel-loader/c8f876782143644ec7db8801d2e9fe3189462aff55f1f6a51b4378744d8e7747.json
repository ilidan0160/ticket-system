{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport MuiAutocomplete from \"@mui/material/Autocomplete\";\nimport invariant from \"tiny-warning\";\nfunction fieldToAutocomplete({\n  disabled,\n  field,\n  form: {\n    isSubmitting,\n    setFieldValue\n  },\n  type,\n  onChange,\n  onBlur,\n  freeSolo,\n  ...props\n}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (props.multiple) {\n      invariant(Array.isArray(field.value), `value for ${field.name} is not an array, this can caused unexpected behaviour`);\n    }\n  }\n  const {\n    onChange: _onChange,\n    onBlur: _onBlur,\n    multiple: _multiple,\n    ...fieldSubselection\n  } = field;\n  return {\n    freeSolo,\n    onBlur: onBlur ?? function (event) {\n      field.onBlur(event ?? field.name);\n    },\n    onChange: onChange ?? function (_event, value) {\n      setFieldValue(field.name, value);\n    },\n    disabled: disabled ?? isSubmitting,\n    loading: isSubmitting,\n    ...fieldSubselection,\n    ...props\n  };\n}\nfunction Autocomplete(props) {\n  return /* @__PURE__ */jsx(MuiAutocomplete, {\n    ...fieldToAutocomplete(props)\n  });\n}\nAutocomplete.displayName = \"FormikMaterialUIAutocomplete\";\nexport { Autocomplete, fieldToAutocomplete };","map":{"version":3,"names":["fieldToAutocomplete","disabled","field","form","isSubmitting","setFieldValue","type","onChange","onBlur","freeSolo","props","process","env","NODE_ENV","multiple","invariant","Array","isArray","value","name","_onChange","_onBlur","_multiple","fieldSubselection","event","_event","loading","Autocomplete","jsx","MuiAutocomplete","displayName"],"sources":["/home/anthony/Escritorio/ticket-system/frontend/node_modules/formik-mui/src/Autocomplete.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiAutocomplete, {\n  AutocompleteProps as MuiAutocompleteProps,\n} from '@mui/material/Autocomplete';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport type { AutocompleteRenderInputParams } from '@mui/material/Autocomplete';\n\nexport interface AutocompleteProps<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n> extends FieldProps,\n    Omit<\n      MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>,\n      'name' | 'value' | 'defaultValue'\n    > {\n  type?: string;\n}\n\nexport function fieldToAutocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n>({\n  disabled,\n  field,\n  form: { isSubmitting, setFieldValue },\n  type,\n  onChange,\n  onBlur,\n  freeSolo,\n  ...props\n}: AutocompleteProps<\n  T,\n  Multiple,\n  DisableClearable,\n  FreeSolo\n>): MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.multiple) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  const {\n    onChange: _onChange,\n    onBlur: _onBlur,\n    multiple: _multiple,\n    ...fieldSubselection\n  } = field;\n\n  return {\n    freeSolo,\n    onBlur:\n      onBlur ??\n      function (event) {\n        field.onBlur(event ?? field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, value) {\n        setFieldValue(field.name, value);\n      },\n    disabled: disabled ?? isSubmitting,\n    loading: isSubmitting,\n    ...fieldSubselection,\n    ...props,\n  };\n}\n\nexport function Autocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n>(props: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) {\n  return <MuiAutocomplete {...fieldToAutocomplete(props)} />;\n}\n\nAutocomplete.displayName = 'FormikMaterialUIAutocomplete';\n"],"mappings":";;;AAsBO,SAASA,oBAKd;EACAC,QAAA;EACAC,KAAA;EACAC,IAAA,EAAM;IAAEC,YAAA;IAAcC;EAAc;EACpCC,IAAA;EACAC,QAAA;EACAC,MAAA;EACAC,QAAA;EACA,GAAGC;AACL,GAKkE;EAC5D,IAAAC,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,cAAc;IACzC,IAAIH,KAAA,CAAMI,QAAA,EAAU;MAClBC,SAAA,CACEC,KAAA,CAAMC,OAAA,CAAQf,KAAA,CAAMgB,KAAK,GACzB,aAAahB,KAAA,CAAMiB,IAAI;IAE3B;EACF;EAEM;IACJZ,QAAA,EAAUa,SAAA;IACVZ,MAAA,EAAQa,OAAA;IACRP,QAAA,EAAUQ,SAAA;IACV,GAAGC;EACD,IAAArB,KAAA;EAEG;IACLO,QAAA;IACAD,MAAA,EACEA,MAAA,IACA,UAAUgB,KAAA,EAAO;MACTtB,KAAA,CAAAM,MAAA,CAAOgB,KAAA,IAAStB,KAAA,CAAMiB,IAAI;IAClC;IACFZ,QAAA,EACEA,QAAA,IACA,UAAUkB,MAAA,EAAQP,KAAA,EAAO;MACTb,aAAA,CAAAH,KAAA,CAAMiB,IAAA,EAAMD,KAAK;IACjC;IACFjB,QAAA,EAAUA,QAAA,IAAYG,YAAA;IACtBsB,OAAA,EAAStB,YAAA;IACT,GAAGmB,iBAAA;IACH,GAAGb;EAAA;AAEP;AAEO,SAASiB,aAKdjB,KAAA,EAAmE;EACnE,OAAQ,eAAAkB,GAAA,CAAAC,eAAA;IAAiB,GAAG7B,mBAAA,CAAoBU,KAAK;EAAG;AAC1D;AAEAiB,YAAA,CAAaG,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}