{"ast":null,"code":"import { jsxs, jsx } from \"react/jsx-runtime\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MuiSelect from \"@mui/material/Select\";\nimport { getIn } from \"formik\";\nfunction fieldToSelect({\n  disabled,\n  field: {\n    onBlur: _onBlur,\n    onChange: fieldOnChange,\n    ...field\n  },\n  form: {\n    isSubmitting,\n    touched,\n    errors,\n    setFieldTouched,\n    setFieldValue\n  },\n  onClose,\n  ...props\n}) {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n  return {\n    disabled: disabled ?? isSubmitting,\n    error: showError,\n    formError: showError ? fieldError : void 0,\n    onBlur: () => {},\n    onChange: fieldOnChange ?? (() => {}),\n    // we must use `onClose` instead of `onChange` to be able to trigger validation when users click outside of the select list.\n    onClose: onClose ?? (async e => {\n      const dataset = e.target.dataset;\n      if (dataset && dataset.value) {\n        await setFieldValue(field.name, dataset.value, false);\n      }\n      setFieldTouched(field.name, true, true);\n    }),\n    ...field,\n    ...props\n  };\n}\nfunction Select({\n  formControl,\n  inputLabel,\n  formHelperText,\n  ...selectProps\n}) {\n  const {\n    error,\n    formError,\n    disabled,\n    ...selectFieldProps\n  } = fieldToSelect(selectProps);\n  const {\n    children: formHelperTextChildren,\n    ...formHelperTextProps\n  } = formHelperText || {};\n  const shouldDisplayFormHelperText = error || formHelperTextChildren;\n  return /* @__PURE__ */jsxs(FormControl, {\n    disabled,\n    error,\n    ...formControl,\n    children: [/* @__PURE__ */jsx(InputLabel, {\n      id: selectFieldProps.labelId,\n      ...inputLabel,\n      children: selectFieldProps.label\n    }), /* @__PURE__ */jsx(MuiSelect, {\n      ...selectFieldProps\n    }), shouldDisplayFormHelperText && /* @__PURE__ */jsx(FormHelperText, {\n      ...formHelperTextProps,\n      children: error ? formError : formHelperTextChildren\n    })]\n  });\n}\nSelect.displayName = \"FormikMaterialUISelect\";\nexport { Select, fieldToSelect };","map":{"version":3,"names":["fieldToSelect","disabled","field","onBlur","_onBlur","onChange","fieldOnChange","form","isSubmitting","touched","errors","setFieldTouched","setFieldValue","onClose","props","fieldError","getIn","name","showError","error","formError","e","dataset","target","value","Select","formControl","inputLabel","formHelperText","selectProps","selectFieldProps","children","formHelperTextChildren","formHelperTextProps","shouldDisplayFormHelperText","jsxs","FormControl","jsx","InputLabel","id","labelId","label","MuiSelect","FormHelperText","displayName"],"sources":["/home/anthony/Escritorio/ticket-system/frontend/node_modules/formik-mui/src/Select.tsx"],"sourcesContent":["import FormControl, { FormControlProps } from '@mui/material/FormControl';\nimport FormHelperText, {\n  FormHelperTextProps,\n} from '@mui/material/FormHelperText';\nimport InputLabel, { InputLabelProps } from '@mui/material/InputLabel';\nimport MuiSelect, { SelectProps as MuiSelectProps } from '@mui/material/Select';\nimport { FieldProps, getIn } from 'formik';\nimport * as React from 'react';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'name' | 'value'> {\n  formControl?: FormControlProps;\n  formHelperText?: FormHelperTextProps;\n  inputLabel?: InputLabelProps;\n}\n\nexport function fieldToSelect({\n  disabled,\n  field: { onBlur: _onBlur, onChange: fieldOnChange, ...field },\n  form: { isSubmitting, touched, errors, setFieldTouched, setFieldValue },\n  onClose,\n  ...props\n}: Omit<\n  SelectProps,\n  'formControl' | 'formHelperText' | 'inputLabel'\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n>): MuiSelectProps & { formError: any } {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    error: showError,\n    formError: showError ? fieldError : undefined,\n    onBlur: () => {\n      // no-op\n    },\n    onChange:\n      fieldOnChange ??\n      (() => {\n        // no-op\n      }),\n    // we must use `onClose` instead of `onChange` to be able to trigger validation when users click outside of the select list.\n    onClose:\n      onClose ??\n      (async (e: React.SyntheticEvent) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const dataset = (e.target as any).dataset as DOMStringMap;\n        if (dataset && dataset.value) {\n          // out-of-sync issue since November 2019: https://github.com/formium/formik/issues/2059#issuecomment-890613538\n          // without the await, formik validates with the former value\n          await setFieldValue(field.name, dataset.value, false);\n        }\n        setFieldTouched(field.name, true, true);\n      }),\n    ...field,\n    ...props,\n  };\n}\n\nexport function Select({\n  formControl,\n  inputLabel,\n  formHelperText,\n  ...selectProps\n}: SelectProps) {\n  const { error, formError, disabled, ...selectFieldProps } =\n    fieldToSelect(selectProps);\n  const { children: formHelperTextChildren, ...formHelperTextProps } =\n    formHelperText || {};\n  const shouldDisplayFormHelperText = error || formHelperTextChildren;\n\n  return (\n    <FormControl disabled={disabled} error={error} {...formControl}>\n      <InputLabel id={selectFieldProps.labelId} {...inputLabel}>\n        {selectFieldProps.label}\n      </InputLabel>\n      <MuiSelect {...selectFieldProps} />\n      {shouldDisplayFormHelperText && (\n        <FormHelperText {...formHelperTextProps}>\n          {error ? formError : formHelperTextChildren}\n        </FormHelperText>\n      )}\n    </FormControl>\n  );\n}\n\nSelect.displayName = 'FormikMaterialUISelect';\n"],"mappings":";;;;;;AAiBO,SAASA,cAAc;EAC5BC,QAAA;EACAC,KAAA,EAAO;IAAEC,MAAA,EAAQC,OAAA;IAASC,QAAA,EAAUC,aAAA;IAAe,GAAGJ;EAAM;EAC5DK,IAAA,EAAM;IAAEC,YAAA;IAAcC,OAAA;IAASC,MAAA;IAAQC,eAAA;IAAiBC;EAAc;EACtEC,OAAA;EACA,GAAGC;AACL,GAIwC;EACtC,MAAMC,UAAA,GAAaC,KAAA,CAAMN,MAAA,EAAQR,KAAA,CAAMe,IAAI;EAC3C,MAAMC,SAAA,GAAYF,KAAA,CAAMP,OAAA,EAASP,KAAA,CAAMe,IAAI,KAAK,CAAC,CAACF,UAAA;EAE3C;IACLd,QAAA,EAAUA,QAAA,IAAYO,YAAA;IACtBW,KAAA,EAAOD,SAAA;IACPE,SAAA,EAAWF,SAAA,GAAYH,UAAA,GAAa;IACpCZ,MAAA,EAAQA,CAAA,KAAM,CAEd;IACAE,QAAA,EACEC,aAAA,KACC,MAAM;IAAA;IAITO,OAAA,EACEA,OAAA,KACC,MAAOQ,CAAA,IAA4B;MAE5B,MAAAC,OAAA,GAAWD,CAAA,CAAEE,MAAA,CAAeD,OAAA;MAC9B,IAAAA,OAAA,IAAWA,OAAA,CAAQE,KAAA,EAAO;QAG5B,MAAMZ,aAAA,CAAcV,KAAA,CAAMe,IAAA,EAAMK,OAAA,CAAQE,KAAA,EAAO,KAAK;MACtD;MACgBb,eAAA,CAAAT,KAAA,CAAMe,IAAA,EAAM,MAAM,IAAI;IAAA;IAE1C,GAAGf,KAAA;IACH,GAAGY;EAAA;AAEP;AAEO,SAASW,OAAO;EACrBC,WAAA;EACAC,UAAA;EACAC,cAAA;EACA,GAAGC;AACL,GAAgB;EACR;IAAEV,KAAA;IAAOC,SAAA;IAAWnB,QAAA;IAAU,GAAG6B;EAAA,IACrC9B,aAAA,CAAc6B,WAAW;EAC3B,MAAM;IAAEE,QAAA,EAAUC,sBAAA;IAAwB,GAAGC;EAAoB,IAC/DL,cAAA,IAAkB;EACpB,MAAMM,2BAAA,GAA8Bf,KAAA,IAASa,sBAAA;EAE7C,OACG,eAAAG,IAAA,CAAAC,WAAA;IAAYnC,QAAA;IAAoBkB,KAAA;IAAe,GAAGO,WAAA;IACjDK,QAAA,kBAAAM,GAAA,CAACC,UAAA;MAAWC,EAAA,EAAIT,gBAAA,CAAiBU,OAAA;MAAU,GAAGb,UAAA;MAC3CI,QAAA,EAAAD,gBAAA,CAAiBW;IAAA,CACpB,GACA,eAAAJ,GAAA,CAACK,SAAA,EAAW;MAAA,GAAGZ;IAAA,CAAkB,GAChCI,2BAAA,IACE,eAAAG,GAAA,CAAAM,cAAA;MAAgB,GAAGV,mBAAA;MACjBF,QAAA,EAAAZ,KAAA,GAAQC,SAAA,GAAYY;IAAA,CACvB;EAEJ;AAEJ;AAEAP,MAAA,CAAOmB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}