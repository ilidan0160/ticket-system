{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport MuiCheckbox from \"@mui/material/Checkbox\";\nimport invariant from \"tiny-warning\";\nfunction fieldToCheckbox({\n  disabled,\n  field: {\n    onBlur: fieldOnBlur,\n    ...field\n  },\n  form: {\n    isSubmitting\n  },\n  type,\n  onBlur,\n  ...props\n}) {\n  const indeterminate = !Array.isArray(field.value) && field.value == null;\n  if (process.env.NODE_ENV !== \"production\") {\n    invariant(type === \"checkbox\", `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`);\n  }\n  return {\n    disabled: disabled ?? isSubmitting,\n    indeterminate,\n    onBlur: onBlur ?? function (e) {\n      fieldOnBlur(e ?? field.name);\n    },\n    ...field,\n    ...props\n  };\n}\nfunction Checkbox(props) {\n  return /* @__PURE__ */jsx(MuiCheckbox, {\n    ...fieldToCheckbox(props)\n  });\n}\nCheckbox.displayName = \"FormikMaterialUICheckbox\";\nexport { Checkbox, fieldToCheckbox };","map":{"version":3,"names":["fieldToCheckbox","disabled","field","onBlur","fieldOnBlur","form","isSubmitting","type","props","indeterminate","Array","isArray","value","process","env","NODE_ENV","invariant","name","e","Checkbox","jsx","MuiCheckbox","displayName"],"sources":["/home/anthony/Escritorio/ticket-system/frontend/node_modules/formik-mui/src/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@mui/material/Checkbox';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      | 'name'\n      | 'value'\n      | 'error'\n      | 'form'\n      | 'checked'\n      | 'defaultChecked'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToCheckbox({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting },\n  type,\n  onBlur,\n  ...props\n}: CheckboxProps): MuiCheckboxProps {\n  const indeterminate = !Array.isArray(field.value) && field.value == null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    indeterminate,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function Checkbox(props: CheckboxProps) {\n  return <MuiCheckbox {...fieldToCheckbox(props)} />;\n}\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n"],"mappings":";;;AAuBO,SAASA,gBAAgB;EAC9BC,QAAA;EACAC,KAAA,EAAO;IAAEC,MAAA,EAAQC,WAAA;IAAa,GAAGF;EAAM;EACvCG,IAAA,EAAM;IAAEC;EAAa;EACrBC,IAAA;EACAJ,MAAA;EACA,GAAGK;AACL,GAAoC;EAC5B,MAAAC,aAAA,GAAgB,CAACC,KAAA,CAAMC,OAAA,CAAQT,KAAA,CAAMU,KAAK,KAAKV,KAAA,CAAMU,KAAA,IAAS;EAEhE,IAAAC,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,cAAc;IACzCC,SAAA,CACET,IAAA,KAAS,YACT,gDAAgDL,KAAA,CAAMe,IAAI;EAE9D;EAEO;IACLhB,QAAA,EAAUA,QAAA,IAAYK,YAAA;IACtBG,aAAA;IACAN,MAAA,EACEA,MAAA,IACA,UAAUe,CAAA,EAAG;MACCd,WAAA,CAAAc,CAAA,IAAKhB,KAAA,CAAMe,IAAI;IAC7B;IACF,GAAGf,KAAA;IACH,GAAGM;EAAA;AAEP;AAEO,SAASW,SAASX,KAAA,EAAsB;EAC7C,OAAQ,eAAAY,GAAA,CAAAC,WAAA;IAAa,GAAGrB,eAAA,CAAgBQ,KAAK;EAAG;AAClD;AAEAW,QAAA,CAASG,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}